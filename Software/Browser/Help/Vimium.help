Once you have Vimium installed, you can see this list of key bindings at any time by typing ?.

|-------Navigating the current page----------|--------Navigating to new pages----------------------------------
| ?  | show the help dialog                  |  o | Open URL, bookmark, or history entry
| h  | scroll left                           |  O | Open URL, bookmark, history entry in a new tab
| j  | scroll down                           |  b | Open bookmark
| k  | scroll up                             |  B | Open bookmark in a new tab
| l  | scroll right                          |---------------------------------------------------       
| gg | scroll to top of the page             | Using find:      
| G  | scroll to bottom of the page          |  / | enter find mode      
| d  | scroll down half a page               |  n | cycle forward to the next find match      
| u  | scroll up half a page                 |  N | cycle backward to the previous find match      
| f  | open a link in the current tab        |
| F  | open a link in a new tab              |       
| r  | reload                                |  Navigating your history:     
| gs | view source                           | H       go back in history      
| i  | enter insert mode                     | L       go forward in history      
| yy | copy the current url to the clipboard |       
| yf | copy a link url to the clipboard      | --------------------------------------------------       
| gf | cycle forward to the next frame       | Manipulating tabs:      
| gF | focus the main/top frame              |  J, gT   go one tab left     
                                             |  K, gt   go one tab right     
                                             
| ][    |  Follow the link labeled 'next' or '>' ('previous' or '<')                                             
|       |    - helpful for browsing paginated sites                                                              
| <a-f> |  open multiple links in a new tab             
| p     | Open the clipboard's URL in the current tab
| P     | Open the clipboard's URL in a new tab         
| gi    |  focus the first (or n-th) text input box on the page. Use <tab> to cycle through options.             
| gu    |  go up one level in the URL hierarchy                                                                  
| gU    |  go up to root of the URL hierarchy                                                                    
| ge    |  edit the current URL                                                                                  
| gE    |  edit the current URL and open in a new tab                                                            
| zH    |  scroll all the way left                                                                               
| zL    |  scroll all the way right                                                                              
| v     |  enter visual mode; use p/P to paste-and-go, use y to yank                                             
| V     |  enter visual line mode                                                           
| R     |  Hard reload the page (skip the cache)                                                           
                                                           

|  g0      go to the first tab. Use ng0 to go to n-th tab     
|  g$      go to the last tab     
|  ^       visit the previously-visited tab     
|  t       create tab     
|  yt      duplicate current tab     
|  x       close current tab     
|  X       restore closed tab (i.e. unwind the 'x' command)     
|  T       search through your open tabs     
|  W       move current tab to new window     

<<		Move tab to the left
>>		Move tab to the right

<a-p>		Pin or unpin current tab
<a-m>		Mute or unmute current tab


Using marks: 

m		Create a new mark
`		Go to a mark

ma, mA  set local mark "a" (global mark "A")
`a, `A  jump to local mark "a" (global mark "A")
``      jump back to the position before the previous jump
          -- that is, before the previous gg, G, n, N, / or `a



Vimium supports command repetition so, for example, hitting 5t will open 5 tabs in rapid succession. <Esc> (or <c-[>) will clear any partial commands in the queue and will also exit insert and find modes.
Additional advanced browsing commands:

There are some advanced commands which aren't documented here; refer to the help dialog (type ?) for a full list.

Custom Key Mappings
You may remap or unmap any of the default key bindings in the "Custom key mappings" on the options page.

Enter one of the following key mapping commands per line:

map key command: Maps a key to a Vimium command. Overrides Chrome's default behavior (if any).
unmap key: Unmaps a key and restores Chrome's default behavior (if any).
unmapAll: Unmaps all bindings. This is useful if you want to completely wipe Vimium's defaults and start from scratch with your own setup.
Examples:

map <c-d> scrollPageDown maps ctrl+d to scrolling the page down. Chrome's default behavior of bringing up a bookmark dialog is suppressed.
map r reload maps the r key to reloading the page.
unmap <c-d> removes any mapping for ctrl+d and restores Chrome's default behavior.
unmap r removes any mapping for the r key.
Available Vimium commands can be found via the "Show available commands" link near the key mapping box on the options page. The command name appears to the right of the description in parenthesis.

You can add comments to key mappings by starting a line with " or #.

The following special keys are available for mapping:

<c-*>, <a-*>, <s-*>, <m-*> for ctrl, alt, shift, and meta (command on Mac) respectively with any key. Replace * with the key of choice.
<left>, <right>, <up>, <down> for the arrow keys.
<f1> through <f12> for the function keys.
<space> for the space key.
<tab>, <enter>, <delete>, <backspace>, <insert>, <home> and <end> for the corresponding non-printable keys.
Shifts are automatically detected so, for example, <c-&> corresponds to ctrl+shift+7 on an English keyboard.

More documentation
Many of the more advanced or involved features are documented on Vimium's GitHub wiki. Also see the FAQ.